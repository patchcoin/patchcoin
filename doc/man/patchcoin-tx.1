.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH PATCHCOIN-TX "1" "January 2025" "patchcoin-tx Anisoptera" "User Commands"
.SH NAME
patchcoin-tx  manual page for patchcoin-tx Anisoptera
.SH SYNOPSIS
.B patchcoin-tx
[\fI\,options\/\fR] \fI\,<hex-tx> \/\fR[\fI\,commands\/\fR]  \fI\,Update hex-encoded patchcoin transaction\/\fR
.br
.B patchcoin-tx
[\fI\,options\/\fR] \fI\,-create \/\fR[\fI\,commands\/\fR]   \fI\,Create hex-encoded patchcoin transaction\/\fR
.SH DESCRIPTION
Patchcoin patchcointx utility version v0.14.10.0 Anisoptera
.SH OPTIONS
.HP
?
.IP
Print this help message and exit
.HP
\fBcreate\fR
.IP
Create new, empty TX.
.HP
\fBjson\fR
.IP
Select JSON output
.HP
\fBtxid\fR
.IP
Output only the hexencoded transaction id of the resultant transaction.
.HP
\fBversion\fR
.IP
Print version and exit
.PP
Debugging/Testing options:
.PP
Chain selection options:
.HP
\fBchain=\fR<chain>
.IP
Use the chain <chain> (default: main). Allowed values: main, test,
signet, regtest
.HP
\fBsignet\fR
.IP
Use the signet chain. Equivalent to \fBchain\fR=\fI\,signet\/\fR. Note that the network
is defined by the \fBsignetchallenge\fR parameter
.HP
\fBsignetchallenge\fR
.IP
Blocks must satisfy the given script to be considered valid (only for
signet networks; defaults to the global default signet test
network challenge)
.HP
\fBsignetseednode\fR
.IP
Specify a seed node for the signet network, in the hostname[:port]
format, e.g. sig.net:1234 (may be used multiple times to specify
multiple seed nodes; defaults to the global default signet test
network seed node(s))
.HP
\fBtestnet\fR
.IP
Use the test chain. Equivalent to \fBchain\fR=\fI\,test\/\fR.
.PP
Commands:
.IP
delin=N
.IP
Delete input N from TX
.IP
delout=N
.IP
Delete output N from TX
.IP
in=TXID:VOUT(:SEQUENCE_NUMBER)
.IP
Add input to TX
.IP
locktime=N
.IP
Set TX lock time to N
.IP
ntime=N
.IP
Set TX timestamp to N
.IP
nversion=N
.IP
Set TX version to N
.IP
outaddr=VALUE:ADDRESS
.IP
Add addressbased output to TX
.IP
outdata=[VALUE:]DATA
.IP
Add databased output to TX
.IP
outmultisig=VALUE:REQUIRED:PUBKEYS:PUBKEY1:PUBKEY2:....[:FLAGS]
.IP
Add Pay To nofm Multisig output to TX. n = REQUIRED, m = PUBKEYS.
Optionally add the "W" flag to produce a
paytowitnessscripthash output. Optionally add the "S" flag to
wrap the output in a paytoscripthash.
.IP
outpubkey=VALUE:PUBKEY[:FLAGS]
.IP
Add paytopubkey output to TX. Optionally add the "W" flag to produce a
paytowitnesspubkeyhash output. Optionally add the "S" flag to
wrap the output in a paytoscripthash.
.IP
outscript=VALUE:SCRIPT[:FLAGS]
.IP
Add raw script output to TX. Optionally add the "W" flag to produce a
paytowitnessscripthash output. Optionally add the "S" flag to
wrap the output in a paytoscripthash.
.IP
sign=SIGHASHFLAGS
.IP
Add zero or more signatures to transaction. This command requires JSON
registers:prevtxs=JSON object, privatekeys=JSON object. See
signrawtransactionwithkey docs for format of sighash flags, JSON
objects.
.PP
Register Commands:
.IP
load=NAME:FILENAME
.IP
Load JSON file FILENAME into register NAME
.IP
set=NAME:JSONSTRING
.IP
Set register NAME to given JSONSTRING
.SH COPYRIGHT
Copyright (C) 2024-2025 The Patchcoin developers
Copyright (C) 2011-2025 The Peercoin developers
Copyright (C) 2009-2025 The Bitcoin Core developers

Please contribute if you find Patchcoin useful. Visit <https://patchcoin.org/>
for further information about the software.
The source code is available from <https://github.com/patchcoin/patchcoin>.

This is experimental software.
Distributed under the MIT software license, see the accompanying file COPYING
or <https://opensource.org/licenses/MIT>
